{
	"info": {
		"_postman_id": "dd71d66d-c2d4-4919-8b89-afd5f2ad6c64",
		"name": "LEADS MANAGEMENT",
		"description": "# Documentation API Leads Management\n\nThis documentation outlines the usage of the CRUD API for managing resources.\n\n## Introduction\n\nThis is a simple CRUD API allow you to do operation Create, Read, Update, and Delete resources. This API follow RESTful principles and supports the standard HTTP methods for performing these operations.\n\n`BASE_URL =` [<code>http://localhost:8000/api</code>](http://localhost:8000)\n\n## API Endpoints\n\n| Operation | **Method** | Path | **Description** |\n| --- | --- | --- | --- |\n| Create | POST | /{service} | create a new resource |\n| Read(Single) | GET | /{service}/{id} | get a single resource |\n| Read(All) | GET | /{service} | get a list of all resource |\n| Update | PUT | /{service}/{id} | update an existing resource by ID |\n| Delete | DELETE | /{service}/{id} | delete a resource by ID |\n\n## Available Service\n\n| **Master Data** | **Service Path** | **Description** |\n| --- | --- | --- |\n| Leads | lead | CRUD Service Leads |\n| Type | type | CRUD Service Type |\n| Status | status | CRUD Service Type |\n| Probability | probability | CRUD Service Type |\n| Channel | channel | CRUD Service Type |\n| Media | media | CRUD Service Type |\n| Source | source | CRUD Service Type |\n| Charts | charts/leads | Get Summary of Leads |\n|  |  |  |\n\nThis REST API use JWT, you must provide token to the header when request API. You can get the token by login. Here example, response after success login\n\n``` json\n{\n    \"token\": \"1|3JjdaqtDClB6qC8RyzzkhRpomMWCNpNKSt9byrRY39592f75\",\n    \"user\": {\n        \"id\": 11,\n        \"name\": \"Test User\",\n        \"email\": \"test@example.com\",\n        \"email_verified_at\": \"2024-02-03T06:46:11.000000Z\",\n        \"created_at\": \"2024-02-03T06:46:11.000000Z\",\n        \"updated_at\": \"2024-02-03T06:46:11.000000Z\"\n    }\n}\n\n ```\n\n# Request Format\n\nAll requests to the API should use JSON as the request body content type.\n\n#### Request Headers\n\n- Content-Type: application/json\n    \n\n#### Example Request Body\n\n``` json\n{\n  \"field1\": \"some value\",\n  \"field2\": \"some value 2\"\n}\n\n ```\n\n## Response Format\n\nAll responses from the API are in JSON format.\n\nResponse Structure\n\n- message: description of result\n- data: resource data\n- error: description of error message, return when request fail\n    \n\n#### Example Response Success\n\nStatus code: 200\n\n``` json\n{\n    \"data\": {\n        \"branch_id\": 1,\n        \"status_id\": 5,\n        \"probability_id\": 2,\n        \"type_id\": 1,\n        \"channel_id\": 3,\n        \"media_id\": 14,\n        \"source_id\": 8,\n        \"fullname\": \"Mang Tri\",\n        \"email\": \"mangtri93@gmail.com\",\n        \"phone_number\": \"089123456789\",\n        \"address\": \"Jalan Nangka\",\n        \"latitude\": \"-8.793974\",\n        \"longitude\": \"-54.968626\",\n        \"company_name\": \"PT GlobalExtreme\",\n        \"notes\": \"My Notes\",\n        \"lead_number\": \"MA1703649984\",\n        \"updated_at\": \"2023-12-27T04:06:24.000000Z\",\n        \"created_at\": \"2023-12-27T04:06:24.000000Z\",\n        \"id\": 101\n    }\n}\n\n ```\n\n#### Example Response Error\n\nStatus code: 4**\n\n``` json\n{\n    \"message\": \"The email has already been taken. (and 1 more error)\",\n    \"errors\": {\n        \"email\": [\n            \"The email has already been taken.\"\n        ],\n        \"phone_number\": [\n            \"The phone number has already been taken.\"\n        ]\n    }\n}\n\n ```",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "8515974"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Login",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "test@example.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "password",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api_base_url}}/login",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_base_url}}/logout",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Leads",
			"item": [
				{
					"name": "GET",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_base_url}}/lead",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"lead"
							],
							"query": [
								{
									"key": "search",
									"value": "",
									"description": "Filter by lead_number, fullname, or email",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "asc",
									"description": "Sort ASC or DESC",
									"disabled": true
								},
								{
									"key": "order",
									"value": "created_at",
									"description": "Order by column",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"description": "Show data by page pagination, works on pagination",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "10",
									"description": "Show maximum data for each page pagination, works on pagination",
									"disabled": true
								},
								{
									"key": "all",
									"value": "false",
									"description": "Show all data leads, remove pagination",
									"disabled": true
								},
								{
									"key": "branch",
									"value": null,
									"description": "Filter leads by branch",
									"disabled": true
								},
								{
									"key": "status",
									"value": null,
									"description": "filter leads by status",
									"disabled": true
								},
								{
									"key": "date_start",
									"value": null,
									"description": "filter leads by created_at, more than specified date",
									"disabled": true
								},
								{
									"key": "date_end",
									"value": null,
									"description": "filter leads by created_at, less than specified date",
									"disabled": true
								}
							]
						},
						"description": "Gets all of your [collections](https://www.getpostman.com/docs/collections). The response includes all of your subscribed collections."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/lead",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"lead"
									],
									"query": [
										{
											"key": "search",
											"value": "",
											"description": "Optional. A workspace ID.",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "order",
											"value": "",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "10",
											"disabled": true
										},
										{
											"key": "all",
											"value": null,
											"disabled": true
										},
										{
											"key": "branch",
											"value": null,
											"disabled": true
										},
										{
											"key": "status",
											"value": null,
											"disabled": true
										},
										{
											"key": "date_start",
											"value": null,
											"disabled": true
										},
										{
											"key": "date_end",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"id\": 3,\n            \"branch_id\": 5,\n            \"status_id\": 8,\n            \"probability_id\": 3,\n            \"type_id\": 2,\n            \"channel_id\": 2,\n            \"media_id\": 12,\n            \"source_id\": null,\n            \"lead_number\": \"FN42802099\",\n            \"fullname\": \"Dr. Freeman Klocko\",\n            \"email\": \"aylin05@example.org\",\n            \"phone_number\": \"(586) 340-7463\",\n            \"address\": \"55169 Halvorson Plaza\\nNew Fay, AZ 71424-7402\",\n            \"latitude\": \"63.900837\",\n            \"longitude\": \"151.902789\",\n            \"company_name\": \"O'Conner-Smith\",\n            \"notes\": \"Cum eaque dolor aut exercitationem dolores aliquid cupiditate. Temporibus facere voluptas deleniti non fugit magni. Sunt enim aut soluta facere.\",\n            \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n            \"updated_at\": \"2023-12-25T10:06:48.000000Z\",\n            \"branch\": {\n                \"id\": 5,\n                \"name\": \"GlobalXtreme Samarinda\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"status\": {\n                \"id\": 8,\n                \"name\": \"Not Response\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"probability\": {\n                \"id\": 3,\n                \"name\": \"Cancel\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"type\": {\n                \"id\": 2,\n                \"name\": \"Outbound\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"channel\": {\n                \"id\": 2,\n                \"name\": \"Walk-ins\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"media\": {\n                \"id\": 12,\n                \"name\": \"Branch Samarinda\",\n                \"channel_id\": 2,\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"source\": null\n        },\n        {\n            \"id\": 4,\n            \"branch_id\": 5,\n            \"status_id\": 6,\n            \"probability_id\": 3,\n            \"type_id\": 2,\n            \"channel_id\": 2,\n            \"media_id\": 11,\n            \"source_id\": null,\n            \"lead_number\": \"HY48790539\",\n            \"fullname\": \"Dawson Hilpert\",\n            \"email\": \"albertha.reilly@example.net\",\n            \"phone_number\": \"+1-657-463-2436\",\n            \"address\": \"5375 McClure Overpass Apt. 421\\nHackettfort, UT 91197\",\n            \"latitude\": \"-38.881404\",\n            \"longitude\": \"30.244001\",\n            \"company_name\": \"Okuneva-Mertz\",\n            \"notes\": \"Eos ut cupiditate atque distinctio illo eos et. Temporibus quas repellat saepe sed rerum facilis voluptate. Maxime deleniti et enim expedita. Alias adipisci voluptatum facere vel vitae nesciunt.\",\n            \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n            \"updated_at\": \"2023-12-25T10:06:48.000000Z\",\n            \"branch\": {\n                \"id\": 5,\n                \"name\": \"GlobalXtreme Samarinda\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"status\": {\n                \"id\": 6,\n                \"name\": \"NI - Not Interested\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"probability\": {\n                \"id\": 3,\n                \"name\": \"Cancel\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"type\": {\n                \"id\": 2,\n                \"name\": \"Outbound\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"channel\": {\n                \"id\": 2,\n                \"name\": \"Walk-ins\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"media\": {\n                \"id\": 11,\n                \"name\": \"Branch Balikpapan\",\n                \"channel_id\": 2,\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"source\": null\n        },\n        {\n            \"id\": 5,\n            \"branch_id\": 2,\n            \"status_id\": 4,\n            \"probability_id\": 1,\n            \"type_id\": 2,\n            \"channel_id\": 3,\n            \"media_id\": 14,\n            \"source_id\": 12,\n            \"lead_number\": \"XW78315378\",\n            \"fullname\": \"Llewellyn McKenzie\",\n            \"email\": \"krunte@example.net\",\n            \"phone_number\": \"1-215-573-7717\",\n            \"address\": \"98709 Kuhlman Tunnel Suite 129\\nLake Kristoferside, PA 10073-1827\",\n            \"latitude\": \"-19.457136\",\n            \"longitude\": \"-94.890979\",\n            \"company_name\": \"Hammes Ltd\",\n            \"notes\": \"Sed ipsa et dolor ipsam architecto praesentium. Nihil ut voluptatem dignissimos quo et aut sequi. Consequatur quisquam temporibus soluta et quibusdam quia ex. Nesciunt et iusto nulla fugit vel.\",\n            \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n            \"updated_at\": \"2023-12-25T10:06:48.000000Z\",\n            \"branch\": {\n                \"id\": 2,\n                \"name\": \"GlobalXtreme Malang\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"status\": {\n                \"id\": 4,\n                \"name\": \"FCB - Future Call Back\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"probability\": {\n                \"id\": 1,\n                \"name\": \"Pending\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"type\": {\n                \"id\": 2,\n                \"name\": \"Outbound\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"channel\": {\n                \"id\": 3,\n                \"name\": \"Marketing Channels\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"media\": {\n                \"id\": 14,\n                \"name\": \"Digital Platform\",\n                \"channel_id\": 3,\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"source\": {\n                \"id\": 12,\n                \"name\": \"Meta Ads\",\n                \"media_id\": 14,\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            }\n        },\n        {\n            \"id\": 6,\n            \"branch_id\": 3,\n            \"status_id\": 9,\n            \"probability_id\": 1,\n            \"type_id\": 2,\n            \"channel_id\": 2,\n            \"media_id\": 12,\n            \"source_id\": null,\n            \"lead_number\": \"BF89587065\",\n            \"fullname\": \"Natasha Buckridge II\",\n            \"email\": \"timothy91@example.org\",\n            \"phone_number\": \"737-765-2378\",\n            \"address\": \"197 Murazik Pine Suite 672\\nErdmanton, NC 68932\",\n            \"latitude\": \"-18.322918\",\n            \"longitude\": \"-0.850455\",\n            \"company_name\": \"Heller LLC\",\n            \"notes\": \"Non reprehenderit temporibus at rerum. Dolorem et repellendus fugiat culpa. Qui quidem et non. Atque est natus sed aut natus eligendi. Aut voluptatem sed esse.\",\n            \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n            \"updated_at\": \"2023-12-25T10:06:48.000000Z\",\n            \"branch\": {\n                \"id\": 3,\n                \"name\": \"GlobalXtreme Jakarta\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"status\": {\n                \"id\": 9,\n                \"name\": \"Pending\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"probability\": {\n                \"id\": 1,\n                \"name\": \"Pending\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"type\": {\n                \"id\": 2,\n                \"name\": \"Outbound\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"channel\": {\n                \"id\": 2,\n                \"name\": \"Walk-ins\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"media\": {\n                \"id\": 12,\n                \"name\": \"Branch Samarinda\",\n                \"channel_id\": 2,\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"source\": null\n        },\n        {\n            \"id\": 7,\n            \"branch_id\": 4,\n            \"status_id\": 7,\n            \"probability_id\": 3,\n            \"type_id\": 1,\n            \"channel_id\": 1,\n            \"media_id\": 1,\n            \"source_id\": 2,\n            \"lead_number\": \"HA49004054\",\n            \"fullname\": \"Anastacio Wolf DVM\",\n            \"email\": \"vgreenholt@example.net\",\n            \"phone_number\": \"+1.910.495.8420\",\n            \"address\": \"2560 Sage Course Apt. 122\\nPort Greysonview, MS 16391\",\n            \"latitude\": \"-57.241851\",\n            \"longitude\": \"81.29399\",\n            \"company_name\": \"Bruen PLC\",\n            \"notes\": \"Odit aut eos ut. Aut quod est non eligendi exercitationem enim. Ab illo placeat ullam ut atque ea blanditiis.\",\n            \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n            \"updated_at\": \"2023-12-25T10:06:48.000000Z\",\n            \"branch\": {\n                \"id\": 4,\n                \"name\": \"GlobalXtreme Balikpapan\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"status\": {\n                \"id\": 7,\n                \"name\": \"Out Coverage\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"probability\": {\n                \"id\": 3,\n                \"name\": \"Cancel\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"type\": {\n                \"id\": 1,\n                \"name\": \"Inbound\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"channel\": {\n                \"id\": 1,\n                \"name\": \"Official Channels\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"media\": {\n                \"id\": 1,\n                \"name\": \"WA Center\",\n                \"channel_id\": 1,\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"source\": {\n                \"id\": 2,\n                \"name\": \"Customer Support\",\n                \"media_id\": 1,\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            }\n        },\n        {\n            \"id\": 8,\n            \"branch_id\": 3,\n            \"status_id\": 4,\n            \"probability_id\": 2,\n            \"type_id\": 1,\n            \"channel_id\": 3,\n            \"media_id\": 13,\n            \"source_id\": null,\n            \"lead_number\": \"WE77550707\",\n            \"fullname\": \"Mrs. Meda Harber III\",\n            \"email\": \"ylarkin@example.net\",\n            \"phone_number\": \"848-699-7968\",\n            \"address\": \"9953 McKenzie Plain Suite 754\\nZeldamouth, CO 32086-2497\",\n            \"latitude\": \"-31.07731\",\n            \"longitude\": \"-97.937356\",\n            \"company_name\": \"Padberg LLC\",\n            \"notes\": \"Aut ea nihil omnis officiis. Illo et vel voluptatem sint non. Est repellat maxime magni sequi distinctio.\",\n            \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n            \"updated_at\": \"2023-12-25T10:06:48.000000Z\",\n            \"branch\": {\n                \"id\": 3,\n                \"name\": \"GlobalXtreme Jakarta\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"status\": {\n                \"id\": 4,\n                \"name\": \"FCB - Future Call Back\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"probability\": {\n                \"id\": 2,\n                \"name\": \"Converted\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"type\": {\n                \"id\": 1,\n                \"name\": \"Inbound\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"channel\": {\n                \"id\": 3,\n                \"name\": \"Marketing Channels\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"media\": {\n                \"id\": 13,\n                \"name\": \"Open Booth\",\n                \"channel_id\": 3,\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"source\": null\n        },\n        {\n            \"id\": 9,\n            \"branch_id\": 4,\n            \"status_id\": 4,\n            \"probability_id\": 2,\n            \"type_id\": 2,\n            \"channel_id\": 2,\n            \"media_id\": 8,\n            \"source_id\": null,\n            \"lead_number\": \"EC32737193\",\n            \"fullname\": \"Mr. Derek West V\",\n            \"email\": \"unicolas@example.org\",\n            \"phone_number\": \"+1-361-722-4431\",\n            \"address\": \"5182 Hackett Loop\\nBartonstad, VT 26008\",\n            \"latitude\": \"-33.095319\",\n            \"longitude\": \"64.987761\",\n            \"company_name\": \"Kemmer Inc\",\n            \"notes\": \"Hic dicta corporis ea sed. Molestiae quod quo neque error aspernatur illum. Ducimus sit et ab dignissimos et nostrum assumenda.\",\n            \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n            \"updated_at\": \"2023-12-25T10:06:48.000000Z\",\n            \"branch\": {\n                \"id\": 4,\n                \"name\": \"GlobalXtreme Balikpapan\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"status\": {\n                \"id\": 4,\n                \"name\": \"FCB - Future Call Back\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"probability\": {\n                \"id\": 2,\n                \"name\": \"Converted\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"type\": {\n                \"id\": 2,\n                \"name\": \"Outbound\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"channel\": {\n                \"id\": 2,\n                \"name\": \"Walk-ins\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"media\": {\n                \"id\": 8,\n                \"name\": \"Branch Badung\",\n                \"channel_id\": 2,\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"source\": null\n        },\n        {\n            \"id\": 10,\n            \"branch_id\": 3,\n            \"status_id\": 8,\n            \"probability_id\": 3,\n            \"type_id\": 1,\n            \"channel_id\": 1,\n            \"media_id\": 1,\n            \"source_id\": 1,\n            \"lead_number\": \"QN55547385\",\n            \"fullname\": \"Diego Stroman\",\n            \"email\": \"bspencer@example.org\",\n            \"phone_number\": \"+1.629.498.2597\",\n            \"address\": \"268 Rodriguez Pine Suite 916\\nLake Tressie, HI 36875\",\n            \"latitude\": \"-50.772569\",\n            \"longitude\": \"133.489728\",\n            \"company_name\": \"Hudson-Cruickshank\",\n            \"notes\": \"Itaque accusantium omnis eum. Necessitatibus et eum labore dolor et dolorem quasi.\",\n            \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n            \"updated_at\": \"2023-12-25T10:06:48.000000Z\",\n            \"branch\": {\n                \"id\": 3,\n                \"name\": \"GlobalXtreme Jakarta\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"status\": {\n                \"id\": 8,\n                \"name\": \"Not Response\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"probability\": {\n                \"id\": 3,\n                \"name\": \"Cancel\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"type\": {\n                \"id\": 1,\n                \"name\": \"Inbound\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"channel\": {\n                \"id\": 1,\n                \"name\": \"Official Channels\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"media\": {\n                \"id\": 1,\n                \"name\": \"WA Center\",\n                \"channel_id\": 1,\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"source\": {\n                \"id\": 1,\n                \"name\": \"Sales\",\n                \"media_id\": 1,\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            }\n        },\n        {\n            \"id\": 11,\n            \"branch_id\": 2,\n            \"status_id\": 6,\n            \"probability_id\": 3,\n            \"type_id\": 2,\n            \"channel_id\": 1,\n            \"media_id\": 2,\n            \"source_id\": 4,\n            \"lead_number\": \"WF90011323\",\n            \"fullname\": \"Abner Waters\",\n            \"email\": \"retta.jacobs@example.org\",\n            \"phone_number\": \"660-642-8584\",\n            \"address\": \"7890 Reece Pines Suite 036\\nJocelynshire, MD 58952\",\n            \"latitude\": \"35.66108\",\n            \"longitude\": \"-36.503446\",\n            \"company_name\": \"Kovacek, Okuneva and Schneider\",\n            \"notes\": \"Sed velit et error ut. Reiciendis et vero adipisci maiores tempora itaque qui. Corrupti omnis reiciendis placeat nisi voluptas aut provident. Esse et perferendis nihil amet natus.\",\n            \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n            \"updated_at\": \"2023-12-25T10:06:48.000000Z\",\n            \"branch\": {\n                \"id\": 2,\n                \"name\": \"GlobalXtreme Malang\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"status\": {\n                \"id\": 6,\n                \"name\": \"NI - Not Interested\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"probability\": {\n                \"id\": 3,\n                \"name\": \"Cancel\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"type\": {\n                \"id\": 2,\n                \"name\": \"Outbound\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"channel\": {\n                \"id\": 1,\n                \"name\": \"Official Channels\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"media\": {\n                \"id\": 2,\n                \"name\": \"Call\",\n                \"channel_id\": 1,\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"source\": {\n                \"id\": 4,\n                \"name\": \"Customer Support\",\n                \"media_id\": 2,\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            }\n        },\n        {\n            \"id\": 12,\n            \"branch_id\": 5,\n            \"status_id\": 3,\n            \"probability_id\": 1,\n            \"type_id\": 1,\n            \"channel_id\": 2,\n            \"media_id\": 9,\n            \"source_id\": null,\n            \"lead_number\": \"XF13129134\",\n            \"fullname\": \"Selmer VonRueden\",\n            \"email\": \"hollis.schneider@example.com\",\n            \"phone_number\": \"984-206-2155\",\n            \"address\": \"5615 Brady Glen\\nNew Isaac, WA 88256\",\n            \"latitude\": \"-19.858686\",\n            \"longitude\": \"83.249408\",\n            \"company_name\": \"Nienow PLC\",\n            \"notes\": \"Et ut sed repellendus non consequatur. Delectus harum accusamus quia quia est qui. Nam enim et et porro eum.\",\n            \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n            \"updated_at\": \"2023-12-25T10:06:48.000000Z\",\n            \"branch\": {\n                \"id\": 5,\n                \"name\": \"GlobalXtreme Samarinda\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"status\": {\n                \"id\": 3,\n                \"name\": \"Junk/Trash\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"probability\": {\n                \"id\": 1,\n                \"name\": \"Pending\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"type\": {\n                \"id\": 1,\n                \"name\": \"Inbound\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"channel\": {\n                \"id\": 2,\n                \"name\": \"Walk-ins\",\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"media\": {\n                \"id\": 9,\n                \"name\": \"Branch Denpasar\",\n                \"channel_id\": 2,\n                \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n                \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n            },\n            \"source\": null\n        }\n    ],\n    \"links\": {\n        \"first\": \"https://api-lead.finitree.online/api/lead?page=1\",\n        \"last\": \"https://api-lead.finitree.online/api/lead?page=10\",\n        \"prev\": null,\n        \"next\": \"https://api-lead.finitree.online/api/lead?page=2\"\n    },\n    \"meta\": {\n        \"current_page\": 1,\n        \"from\": 1,\n        \"last_page\": 10,\n        \"links\": [\n            {\n                \"url\": null,\n                \"label\": \"&laquo; Previous\",\n                \"active\": false\n            },\n            {\n                \"url\": \"https://api-lead.finitree.online/api/lead?page=1\",\n                \"label\": \"1\",\n                \"active\": true\n            },\n            {\n                \"url\": \"https://api-lead.finitree.online/api/lead?page=2\",\n                \"label\": \"2\",\n                \"active\": false\n            },\n            {\n                \"url\": \"https://api-lead.finitree.online/api/lead?page=3\",\n                \"label\": \"3\",\n                \"active\": false\n            },\n            {\n                \"url\": \"https://api-lead.finitree.online/api/lead?page=4\",\n                \"label\": \"4\",\n                \"active\": false\n            },\n            {\n                \"url\": \"https://api-lead.finitree.online/api/lead?page=5\",\n                \"label\": \"5\",\n                \"active\": false\n            },\n            {\n                \"url\": \"https://api-lead.finitree.online/api/lead?page=6\",\n                \"label\": \"6\",\n                \"active\": false\n            },\n            {\n                \"url\": \"https://api-lead.finitree.online/api/lead?page=7\",\n                \"label\": \"7\",\n                \"active\": false\n            },\n            {\n                \"url\": \"https://api-lead.finitree.online/api/lead?page=8\",\n                \"label\": \"8\",\n                \"active\": false\n            },\n            {\n                \"url\": \"https://api-lead.finitree.online/api/lead?page=9\",\n                \"label\": \"9\",\n                \"active\": false\n            },\n            {\n                \"url\": \"https://api-lead.finitree.online/api/lead?page=10\",\n                \"label\": \"10\",\n                \"active\": false\n            },\n            {\n                \"url\": \"https://api-lead.finitree.online/api/lead?page=2\",\n                \"label\": \"Next &raquo;\",\n                \"active\": false\n            }\n        ],\n        \"path\": \"https://api-lead.finitree.online/api/lead\",\n        \"per_page\": 10,\n        \"to\": 10,\n        \"total\": 98\n    }\n}"
						}
					]
				},
				{
					"name": "DETAIL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_base_url}}/lead/101",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"lead",
								"101"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Gets information about a collection. For a complete list of this endpoint's possible values, use the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json)."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/lead/10",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"lead",
										"10"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": 10,\n        \"branch_id\": 3,\n        \"status_id\": 8,\n        \"probability_id\": 3,\n        \"type_id\": 1,\n        \"channel_id\": 1,\n        \"media_id\": 1,\n        \"source_id\": 1,\n        \"lead_number\": \"QN55547385\",\n        \"fullname\": \"Diego Stroman\",\n        \"email\": \"bspencer@example.org\",\n        \"phone_number\": \"+1.629.498.2597\",\n        \"address\": \"268 Rodriguez Pine Suite 916\\nLake Tressie, HI 36875\",\n        \"latitude\": \"-50.772569\",\n        \"longitude\": \"133.489728\",\n        \"company_name\": \"Hudson-Cruickshank\",\n        \"notes\": \"Itaque accusantium omnis eum. Necessitatibus et eum labore dolor et dolorem quasi.\",\n        \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n        \"updated_at\": \"2023-12-25T10:06:48.000000Z\",\n        \"branch\": {\n            \"id\": 3,\n            \"name\": \"GlobalXtreme Jakarta\",\n            \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n            \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n        },\n        \"status\": {\n            \"id\": 8,\n            \"name\": \"Not Response\",\n            \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n            \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n        },\n        \"probability\": {\n            \"id\": 3,\n            \"name\": \"Cancel\",\n            \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n            \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n        },\n        \"type\": {\n            \"id\": 1,\n            \"name\": \"Inbound\",\n            \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n            \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n        },\n        \"channel\": {\n            \"id\": 1,\n            \"name\": \"Official Channels\",\n            \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n            \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n        },\n        \"media\": {\n            \"id\": 1,\n            \"name\": \"WA Center\",\n            \"channel_id\": 1,\n            \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n            \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n        },\n        \"source\": {\n            \"id\": 1,\n            \"name\": \"Sales\",\n            \"media_id\": 1,\n            \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n            \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n        }\n    }\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/lead/1000",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"lead",
										"1000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"message\": \"No query results for model [App\\\\Models\\\\Lead] 1000\"\n}"
						}
					]
				},
				{
					"name": "CREATE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"branch_id\": 1,\n    \"fullname\": \"Mang Tri\",\n    \"company_name\": \"PT GlobalExtreme\",\n    \"address\": \"Jalan Nangka\",\n    \"email\": \"mangtri93@gmail.com\",\n    \"phone_number\": \"089123456789\",\n    \"latitude\": \"-8.793974\",\n    \"longitude\": \"-54.968626\",\n    \"status_id\": 5,\n    \"probability_id\": 2,\n    \"type_id\": 1,\n    \"channel_id\": 3,\n    \"media_id\": 14,\n    \"source_id\": 8,\n    \"notes\": \"My Notes\",\n    \"is_coverage\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api_base_url}}/lead",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"lead"
							]
						},
						"description": "Creates a collection using the [Postman Collection v2 schema format](https://schema.postman.com/json/collection/v2.1.0/docs/index.html). Include a `collection` object in the request body that contains the following required properties:\n\n*   `info` — An **object** that contains the following properties:\n    *   `name` — A **string** value that contains the collection's name.\n    *   `schema` — A **string** that contains a URL to the collection's schema. For example, the `https://schema.getpostman.com/collection/v1` URL.\n*   `item` — An **object** that contains the HTTP request and response information.\n    *   `request` — An **object** that contains the collection's request information. For a complete list of values, refer to the `definitions.request` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json). If you pass an empty object for this value, the system defaults to an untitled GET request.\n\n**Note:**\n\n*   For a complete list of available property values for this endpoint, use the following references available in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json):\n    *   `info` object — Use the `definitions.info` entry.\n    *   `item` object — Use the `definitions.items` entry.\n*   For all other possible values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json)."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"branch_id\": 1,\n    \"fullname\": \"Mang Tri\",\n    \"company_name\": \"PT GlobalExtreme\",\n    \"address\": \"Jalan Nangka\",\n    \"email\": \"mangtri93@gmail.com\",\n    \"phone_number\": \"089123456789\",\n    \"latitude\": \"-8.793974\",\n    \"longitude\": \"-54.968626\",\n    \"status_id\": 5,\n    \"probability_id\": 2,\n    \"type_id\": 1,\n    \"channel_id\": 3,\n    \"media_id\": 14,\n    \"source_id\": 8,\n    \"notes\": \"My Notes\",\n    \"is_coverage\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_base_url}}/lead",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"lead"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"branch_id\": 1,\n        \"status_id\": 5,\n        \"probability_id\": 2,\n        \"type_id\": 1,\n        \"channel_id\": 3,\n        \"media_id\": 14,\n        \"source_id\": 8,\n        \"fullname\": \"Mang Tri\",\n        \"email\": \"mangtri93@gmail.com\",\n        \"phone_number\": \"089123456789\",\n        \"address\": \"Jalan Nangka\",\n        \"latitude\": \"-8.793974\",\n        \"longitude\": \"-54.968626\",\n        \"company_name\": \"PT GlobalExtreme\",\n        \"notes\": \"My Notes\",\n        \"lead_number\": \"MA1703649984\",\n        \"updated_at\": \"2023-12-27T04:06:24.000000Z\",\n        \"created_at\": \"2023-12-27T04:06:24.000000Z\",\n        \"id\": 101\n    }\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"branch_id\": 1,\n    \"fullname\": \"Mang Tri\",\n    \"company_name\": \"PT GlobalExtreme\",\n    \"address\": \"Jalan Nangka\",\n    \"email\": \"mangtri93@gmail.com\",\n    \"phone_number\": \"089123456789\",\n    \"latitude\": \"-8.793974\",\n    \"longitude\": \"-54.968626\",\n    \"status_id\": 5,\n    \"probability_id\": 2,\n    \"type_id\": 1,\n    \"channel_id\": 3,\n    \"media_id\": 14,\n    \"source_id\": 8,\n    \"notes\": \"My Notes\",\n    \"is_coverage\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_base_url}}/lead",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"lead"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The email has already been taken. (and 1 more error)\",\n    \"errors\": {\n        \"email\": [\n            \"The email has already been taken.\"\n        ],\n        \"phone_number\": [\n            \"The phone number has already been taken.\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "UPDATE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"branch_id\": 1,\n    \"fullname\": \"Mang Tri Edit\",\n    \"company_name\": \"PT GlobalExtreme\",\n    \"address\": \"Jalan Nangka Utara\",\n    \"email\": \"mangt2@gmail.com\",\n    \"phone_number\": \"091223456789\",\n    \"latitude\": \"-8.793974\",\n    \"longitude\": \"-54.968626\",\n    \"status_id\": 5,\n    \"probability_id\": 2,\n    \"type_id\": 1,\n    \"channel_id\": 3,\n    \"media_id\": 14,\n    \"source_id\": 9,\n    \"notes\": \"Something write here\"\n}"
						},
						"url": {
							"raw": "{{api_base_url}}/lead/1",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"lead",
								"1"
							]
						},
						"description": "Updates a collection using the [Postman Collection v2 schema format](https://schema.postman.com/json/collection/v2.1.0/docs/index.html). Include a `collection` object in the request body that contains the following required properties:\n\n- `info` — An **object** that contains the following properties:\n    - `name` — A **string** value that contains the collection's name.\n    - `schema` — A **string** that contains a URL to the collection's schema. For example, the `https://schema.getpostman.com/collection/v1` URL.\n- `item` — An **object** that contains the HTTP request and response information.\n    - `request` — An **object** that contains the collection's request information. For a complete list of values, refer to the `definitions.request` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json). If you pass an empty object for this value, the system defaults to an untitled GET request.\n\n**Note:**\n\n- For a complete list of available property values for this endpoint, use the following references available in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json):\n    - `info` object — Use the `definitions.info` entry.\n    - `item` object — Use the `definitions.items` entry.\n- For all other possible values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json).\n    \n\n### Important\n\nUse caution when using this endpoint. The system will replace the existing collection with the values passed in the request body."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"branch_id\": 1,\n    \"fullname\": \"Mang Tri Edit\",\n    \"company_name\": \"PT GlobalExtreme\",\n    \"address\": \"Jalan Nangka Utara\",\n    \"email\": \"mangtri93@gmail.com\",\n    \"phone_number\": \"089123456789\",\n    \"latitude\": \"-8.793974\",\n    \"longitude\": \"-54.968626\",\n    \"status_id\": 5,\n    \"probability_id\": 2,\n    \"type_id\": 1,\n    \"channel_id\": 3,\n    \"media_id\": 14,\n    \"source_id\": 9,\n    \"notes\": \"Something write here\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_base_url}}/lead/10",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"lead",
										"10"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": []\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"branch_id\": 1,\n    \"fullname\": \"Mang Tri Edit\",\n    \"company_name\": \"PT GlobalExtreme\",\n    \"address\": \"Jalan Nangka Utara\",\n    \"email\": \"mangtri93@gmail.com\",\n    \"phone_number\": \"089123456789\",\n    \"latitude\": \"-8.793974\",\n    \"longitude\": \"-54.968626\",\n    \"status_id\": 5,\n    \"probability_id\": 2,\n    \"type_id\": 1,\n    \"channel_id\": 3,\n    \"media_id\": 14,\n    \"source_id\": 9,\n    \"notes\": \"Something write here\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_base_url}}/lead/10",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"lead",
										"10"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The email has already been taken. (and 1 more error)\",\n    \"errors\": {\n        \"email\": [\n            \"The email has already been taken.\"\n        ],\n        \"phone_number\": [\n            \"The phone number has already been taken.\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "DELETE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_base_url}}/lead/101",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"lead",
								"101"
							]
						},
						"description": "Deletes a collection."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/lead/11",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"lead",
										"11"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": []\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/lead/1000",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"lead",
										"1000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"No query results for model [App\\\\Models\\\\Lead] 11\"\n}"
						}
					]
				}
			],
			"description": "The API CRUD for handling Leads, here the list of API\n\n- Get All Leads\n    \n- Get One Leads\n    \n- Create a Leads\n    \n- Update a Leads\n    \n- Delete a Leads"
		},
		{
			"name": "Branch",
			"item": [
				{
					"name": "GET",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_base_url}}/branch",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"branch"
							]
						},
						"description": "Gets all of your [collections](https://www.getpostman.com/docs/collections). The response includes all of your subscribed collections."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/lead",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"lead"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"GlobalXtreme Bali\",\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 2,\n            \"name\": \"GlobalXtreme Malang\",\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 3,\n            \"name\": \"GlobalXtreme Jakarta\",\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 4,\n            \"name\": \"GlobalXtreme Balikpapan\",\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 5,\n            \"name\": \"GlobalXtreme Samarinda\",\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "DETAIL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_base_url}}/branch/1",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"branch",
								"1"
							]
						},
						"description": "Gets information about a collection. For a complete list of this endpoint's possible values, use the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json)."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/branch/1",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"branch",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"GlobalXtreme Bali\",\n        \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n        \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n    }\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/branch/100",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"branch",
										"100"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"message\": \"No query results for model [App\\\\Models\\\\Branch] 100\"\n}"
						}
					]
				},
				{
					"name": "CREATE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"GlobalExtreme US\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api_base_url}}/branch",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"branch"
							]
						},
						"description": "Creates a collection using the [Postman Collection v2 schema format](https://schema.postman.com/json/collection/v2.1.0/docs/index.html). Include a `collection` object in the request body that contains the following required properties:\n\n*   `info` — An **object** that contains the following properties:\n    *   `name` — A **string** value that contains the collection's name.\n    *   `schema` — A **string** that contains a URL to the collection's schema. For example, the `https://schema.getpostman.com/collection/v1` URL.\n*   `item` — An **object** that contains the HTTP request and response information.\n    *   `request` — An **object** that contains the collection's request information. For a complete list of values, refer to the `definitions.request` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json). If you pass an empty object for this value, the system defaults to an untitled GET request.\n\n**Note:**\n\n*   For a complete list of available property values for this endpoint, use the following references available in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json):\n    *   `info` object — Use the `definitions.info` entry.\n    *   `item` object — Use the `definitions.items` entry.\n*   For all other possible values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json)."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"branch_id\": 1,\n    \"fullname\": \"Mang Tri\",\n    \"company_name\": \"PT GlobalExtreme\",\n    \"address\": \"Jalan Nangka\",\n    \"email\": \"mangtri93@gmail.com\",\n    \"phone_number\": \"089123456789\",\n    \"latitude\": \"-8.793974\",\n    \"longitude\": \"-54.968626\",\n    \"status_id\": 5,\n    \"probability_id\": 2,\n    \"type_id\": 1,\n    \"channel_id\": 3,\n    \"media_id\": 14,\n    \"source_id\": 8,\n    \"notes\": \"My Notes\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_base_url}}/branch",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"branch"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"name\": \"GlobalExtreme Papua\",\n        \"updated_at\": \"2024-02-03T05:10:20.000000Z\",\n        \"created_at\": \"2024-02-03T05:10:20.000000Z\",\n        \"id\": 7\n    }\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"branch_id\": 1,\n    \"fullname\": \"Mang Tri\",\n    \"company_name\": \"PT GlobalExtreme\",\n    \"address\": \"Jalan Nangka\",\n    \"email\": \"mangtri93@gmail.com\",\n    \"phone_number\": \"089123456789\",\n    \"latitude\": \"-8.793974\",\n    \"longitude\": \"-54.968626\",\n    \"status_id\": 5,\n    \"probability_id\": 2,\n    \"type_id\": 1,\n    \"channel_id\": 3,\n    \"media_id\": 14,\n    \"source_id\": 8,\n    \"notes\": \"My Notes\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_base_url}}/branch",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"branch"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The name field is required.\",\n    \"errors\": {\n        \"name\": [\n            \"The name field is required.\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "UPDATE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"GlobalExtreme Jawa 2\"\n}"
						},
						"url": {
							"raw": "{{api_base_url}}/branch/5",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"branch",
								"5"
							]
						},
						"description": "Updates a collection using the [Postman Collection v2 schema format](https://schema.postman.com/json/collection/v2.1.0/docs/index.html). Include a `collection` object in the request body that contains the following required properties:\n\n- `info` — An **object** that contains the following properties:\n    - `name` — A **string** value that contains the collection's name.\n    - `schema` — A **string** that contains a URL to the collection's schema. For example, the `https://schema.getpostman.com/collection/v1` URL.\n- `item` — An **object** that contains the HTTP request and response information.\n    - `request` — An **object** that contains the collection's request information. For a complete list of values, refer to the `definitions.request` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json). If you pass an empty object for this value, the system defaults to an untitled GET request.\n\n**Note:**\n\n- For a complete list of available property values for this endpoint, use the following references available in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json):\n    - `info` object — Use the `definitions.info` entry.\n    - `item` object — Use the `definitions.items` entry.\n- For all other possible values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json).\n    \n\n### Important\n\nUse caution when using this endpoint. The system will replace the existing collection with the values passed in the request body."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"branch_id\": 1,\n    \"fullname\": \"Mang Tri Edit\",\n    \"company_name\": \"PT GlobalExtreme\",\n    \"address\": \"Jalan Nangka Utara\",\n    \"email\": \"mangtri93@gmail.com\",\n    \"phone_number\": \"089123456789\",\n    \"latitude\": \"-8.793974\",\n    \"longitude\": \"-54.968626\",\n    \"status_id\": 5,\n    \"probability_id\": 2,\n    \"type_id\": 1,\n    \"channel_id\": 3,\n    \"media_id\": 14,\n    \"source_id\": 9,\n    \"notes\": \"Something write here\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_base_url}}/branch/1",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"branch",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": []\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"branch_id\": 1,\n    \"fullname\": \"Mang Tri Edit\",\n    \"company_name\": \"PT GlobalExtreme\",\n    \"address\": \"Jalan Nangka Utara\",\n    \"email\": \"mangtri93@gmail.com\",\n    \"phone_number\": \"089123456789\",\n    \"latitude\": \"-8.793974\",\n    \"longitude\": \"-54.968626\",\n    \"status_id\": 5,\n    \"probability_id\": 2,\n    \"type_id\": 1,\n    \"channel_id\": 3,\n    \"media_id\": 14,\n    \"source_id\": 9,\n    \"notes\": \"Something write here\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_base_url}}/branch/1",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"branch",
										"1"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The name field is required.\",\n    \"errors\": {\n        \"name\": [\n            \"The name field is required.\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "DELETE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "1|3JjdaqtDClB6qC8RyzzkhRpomMWCNpNKSt9byrRY39592f75",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_base_url}}/branch/2",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"branch",
								"2"
							]
						},
						"description": "Deletes a collection."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/branch/11",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"branch",
										"11"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": 7,\n        \"name\": \"GlobalExtreme Papua\",\n        \"created_at\": \"2024-02-03T05:10:20.000000Z\",\n        \"updated_at\": \"2024-02-03T05:10:20.000000Z\"\n    }\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/branch/1000",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"branch",
										"1000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"No query results for model [App\\\\Models\\\\Branch] 11\"\n}"
						}
					]
				}
			],
			"description": "The API CRUD for handling Leads, here the list of API\n\n- Get All Branch\n    \n- Get One Branch\n    \n- Create a Branch\n    \n- Update a Branch\n    \n- Delete a Branch"
		},
		{
			"name": "Type",
			"item": [
				{
					"name": "GET",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_base_url}}/type",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"type"
							]
						},
						"description": "Gets all of your [collections](https://www.getpostman.com/docs/collections). The response includes all of your subscribed collections."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/type",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"type"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"Inbound\",\n            \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n            \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Outbound\",\n            \"created_at\": \"2023-12-25T10:06:48.000000Z\",\n            \"updated_at\": \"2023-12-25T10:06:48.000000Z\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "DETAIL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_base_url}}/type/1",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"type",
								"1"
							]
						},
						"description": "Gets information about a collection. For a complete list of this endpoint's possible values, use the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json)."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/type/1",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"type",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"Edit\",\n        \"description\": \"Edit\",\n        \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n        \"updated_at\": \"2024-02-03T03:55:29.000000Z\"\n    }\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/type/100",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"type",
										"100"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"message\": \"No query results for model [App\\\\Models\\\\Type] 100\"\n}"
						}
					]
				},
				{
					"name": "CREATE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Type 1\",\n    \"description\": \"Type Description\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api_base_url}}/type",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"type"
							]
						},
						"description": "Creates a collection using the [Postman Collection v2 schema format](https://schema.postman.com/json/collection/v2.1.0/docs/index.html). Include a `collection` object in the request body that contains the following required properties:\n\n*   `info` — An **object** that contains the following properties:\n    *   `name` — A **string** value that contains the collection's name.\n    *   `schema` — A **string** that contains a URL to the collection's schema. For example, the `https://schema.getpostman.com/collection/v1` URL.\n*   `item` — An **object** that contains the HTTP request and response information.\n    *   `request` — An **object** that contains the collection's request information. For a complete list of values, refer to the `definitions.request` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json). If you pass an empty object for this value, the system defaults to an untitled GET request.\n\n**Note:**\n\n*   For a complete list of available property values for this endpoint, use the following references available in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json):\n    *   `info` object — Use the `definitions.info` entry.\n    *   `item` object — Use the `definitions.items` entry.\n*   For all other possible values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json)."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"branch_id\": 1,\n    \"fullname\": \"Mang Tri\",\n    \"company_name\": \"PT GlobalExtreme\",\n    \"address\": \"Jalan Nangka\",\n    \"email\": \"mangtri93@gmail.com\",\n    \"phone_number\": \"089123456789\",\n    \"latitude\": \"-8.793974\",\n    \"longitude\": \"-54.968626\",\n    \"status_id\": 5,\n    \"probability_id\": 2,\n    \"type_id\": 1,\n    \"channel_id\": 3,\n    \"media_id\": 14,\n    \"source_id\": 8,\n    \"notes\": \"My Notes\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_base_url}}/type",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"type"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"name\": \"Type 1\",\n        \"description\": \"Type Description\",\n        \"updated_at\": \"2024-02-03T05:20:07.000000Z\",\n        \"created_at\": \"2024-02-03T05:20:07.000000Z\",\n        \"id\": 3\n    }\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"branch_id\": 1,\n    \"fullname\": \"Mang Tri\",\n    \"company_name\": \"PT GlobalExtreme\",\n    \"address\": \"Jalan Nangka\",\n    \"email\": \"mangtri93@gmail.com\",\n    \"phone_number\": \"089123456789\",\n    \"latitude\": \"-8.793974\",\n    \"longitude\": \"-54.968626\",\n    \"status_id\": 5,\n    \"probability_id\": 2,\n    \"type_id\": 1,\n    \"channel_id\": 3,\n    \"media_id\": 14,\n    \"source_id\": 8,\n    \"notes\": \"My Notes\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_base_url}}/type",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"type"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The name field is required.\",\n    \"errors\": {\n        \"name\": [\n            \"The name field is required.\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "UPDATE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Type 2\",\n    \"description\": \"Type Description\"\n}"
						},
						"url": {
							"raw": "{{api_base_url}}/type/1",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"type",
								"1"
							]
						},
						"description": "Updates a collection using the [Postman Collection v2 schema format](https://schema.postman.com/json/collection/v2.1.0/docs/index.html). Include a `collection` object in the request body that contains the following required properties:\n\n- `info` — An **object** that contains the following properties:\n    - `name` — A **string** value that contains the collection's name.\n    - `schema` — A **string** that contains a URL to the collection's schema. For example, the `https://schema.getpostman.com/collection/v1` URL.\n- `item` — An **object** that contains the HTTP request and response information.\n    - `request` — An **object** that contains the collection's request information. For a complete list of values, refer to the `definitions.request` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json). If you pass an empty object for this value, the system defaults to an untitled GET request.\n\n**Note:**\n\n- For a complete list of available property values for this endpoint, use the following references available in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json):\n    - `info` object — Use the `definitions.info` entry.\n    - `item` object — Use the `definitions.items` entry.\n- For all other possible values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json).\n    \n\n### Important\n\nUse caution when using this endpoint. The system will replace the existing collection with the values passed in the request body."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"branch_id\": 1,\n    \"fullname\": \"Mang Tri Edit\",\n    \"company_name\": \"PT GlobalExtreme\",\n    \"address\": \"Jalan Nangka Utara\",\n    \"email\": \"mangtri93@gmail.com\",\n    \"phone_number\": \"089123456789\",\n    \"latitude\": \"-8.793974\",\n    \"longitude\": \"-54.968626\",\n    \"status_id\": 5,\n    \"probability_id\": 2,\n    \"type_id\": 1,\n    \"channel_id\": 3,\n    \"media_id\": 14,\n    \"source_id\": 9,\n    \"notes\": \"Something write here\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_base_url}}/type/1",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"type",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"Type 2\",\n        \"description\": \"Type Description\",\n        \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n        \"updated_at\": \"2024-02-03T05:40:09.000000Z\"\n    }\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"branch_id\": 1,\n    \"fullname\": \"Mang Tri Edit\",\n    \"company_name\": \"PT GlobalExtreme\",\n    \"address\": \"Jalan Nangka Utara\",\n    \"email\": \"mangtri93@gmail.com\",\n    \"phone_number\": \"089123456789\",\n    \"latitude\": \"-8.793974\",\n    \"longitude\": \"-54.968626\",\n    \"status_id\": 5,\n    \"probability_id\": 2,\n    \"type_id\": 1,\n    \"channel_id\": 3,\n    \"media_id\": 14,\n    \"source_id\": 9,\n    \"notes\": \"Something write here\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_base_url}}/branch/1",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"branch",
										"1"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The name has already been taken.\",\n    \"errors\": {\n        \"name\": [\n            \"The name has already been taken.\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "DELETE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_base_url}}/type/3",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"type",
								"3"
							]
						},
						"description": "Deletes a collection."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/type/11",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"type",
										"11"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": 3,\n        \"name\": \"Type 1\",\n        \"description\": \"Type Description\",\n        \"created_at\": \"2024-02-03T05:20:07.000000Z\",\n        \"updated_at\": \"2024-02-03T05:20:07.000000Z\"\n    }\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/type/100",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"type",
										"100"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"No query results for model [App\\\\Models\\\\Type] 100\"\n}"
						}
					]
				}
			],
			"description": "The API CRUD for handling Type, here the list of API\n\n- Get All Type\n    \n- Get One Type\n    \n- Create a Type\n    \n- Update a Type\n    \n- Delete a Type"
		},
		{
			"name": "Status",
			"item": [
				{
					"name": "GET",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_base_url}}/status",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"status"
							]
						},
						"description": "Gets all of your [collections](https://www.getpostman.com/docs/collections). The response includes all of your subscribed collections."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/status",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"Consideration\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Scheduled\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 3,\n            \"name\": \"Junk/Trash\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 4,\n            \"name\": \"FCB - Future Call Back\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 5,\n            \"name\": \"Qualified\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 6,\n            \"name\": \"NI - Not Interested\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 7,\n            \"name\": \"Out Coverage\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 8,\n            \"name\": \"Not Response\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 9,\n            \"name\": \"Pending\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 10,\n            \"name\": \"Cancel\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "DETAIL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_base_url}}/status/1",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"status",
								"1"
							]
						},
						"description": "Gets information about a collection. For a complete list of this endpoint's possible values, use the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json)."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/status/1",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"status",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"Consideration\",\n        \"description\": null,\n        \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n        \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n    }\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/status/100",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"status",
										"100"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"message\": \"No query results for model [App\\\\Models\\\\Status] 100\"\n}"
						}
					]
				},
				{
					"name": "CREATE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Status\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api_base_url}}/status",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"status"
							]
						},
						"description": "Creates a collection using the [Postman Collection v2 schema format](https://schema.postman.com/json/collection/v2.1.0/docs/index.html). Include a `collection` object in the request body that contains the following required properties:\n\n*   `info` — An **object** that contains the following properties:\n    *   `name` — A **string** value that contains the collection's name.\n    *   `schema` — A **string** that contains a URL to the collection's schema. For example, the `https://schema.getpostman.com/collection/v1` URL.\n*   `item` — An **object** that contains the HTTP request and response information.\n    *   `request` — An **object** that contains the collection's request information. For a complete list of values, refer to the `definitions.request` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json). If you pass an empty object for this value, the system defaults to an untitled GET request.\n\n**Note:**\n\n*   For a complete list of available property values for this endpoint, use the following references available in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json):\n    *   `info` object — Use the `definitions.info` entry.\n    *   `item` object — Use the `definitions.items` entry.\n*   For all other possible values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json)."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"New Status\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_base_url}}/status",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"status"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"name\": \"New Status\",\n        \"description\": null,\n        \"updated_at\": \"2024-02-03T05:46:20.000000Z\",\n        \"created_at\": \"2024-02-03T05:46:20.000000Z\",\n        \"id\": 11\n    }\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_base_url}}/status",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"status"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The name field is required.\",\n    \"errors\": {\n        \"name\": [\n            \"The name field is required.\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "UPDATE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Consideration\",\n    \"description\": \"Some description\"\n}"
						},
						"url": {
							"raw": "{{api_base_url}}/status/1",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"status",
								"1"
							]
						},
						"description": "Updates a collection using the [Postman Collection v2 schema format](https://schema.postman.com/json/collection/v2.1.0/docs/index.html). Include a `collection` object in the request body that contains the following required properties:\n\n- `info` — An **object** that contains the following properties:\n    - `name` — A **string** value that contains the collection's name.\n    - `schema` — A **string** that contains a URL to the collection's schema. For example, the `https://schema.getpostman.com/collection/v1` URL.\n- `item` — An **object** that contains the HTTP request and response information.\n    - `request` — An **object** that contains the collection's request information. For a complete list of values, refer to the `definitions.request` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json). If you pass an empty object for this value, the system defaults to an untitled GET request.\n\n**Note:**\n\n- For a complete list of available property values for this endpoint, use the following references available in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json):\n    - `info` object — Use the `definitions.info` entry.\n    - `item` object — Use the `definitions.items` entry.\n- For all other possible values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json).\n    \n\n### Important\n\nUse caution when using this endpoint. The system will replace the existing collection with the values passed in the request body."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Consideration\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_base_url}}/status/1",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"status",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"Consideration\",\n        \"description\": \"Some description\",\n        \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n        \"updated_at\": \"2024-02-03T05:50:25.000000Z\"\n    }\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Consideration\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_base_url}}/status/1",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"status",
										"1"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The name has already been taken.\",\n    \"errors\": {\n        \"name\": [\n            \"The name has already been taken.\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "DELETE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_base_url}}/status/11",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"status",
								"11"
							]
						},
						"description": "Deletes a collection."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/status/11",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"status",
										"11"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": 11,\n        \"name\": \"New Status\",\n        \"description\": null,\n        \"created_at\": \"2024-02-03T05:46:20.000000Z\",\n        \"updated_at\": \"2024-02-03T05:46:20.000000Z\"\n    }\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/status/100",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"status",
										"100"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"No query results for model [App\\\\Models\\\\Status] 100\"\n}"
						}
					]
				}
			],
			"description": "The API CRUD for handling Type, here the list of API\n\n- Get All Status\n    \n- Get One Status\n    \n- Create a Status\n    \n- Update a Status\n    \n- Delete a Status"
		},
		{
			"name": "Probability",
			"item": [
				{
					"name": "GET",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_base_url}}/probability",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"probability"
							]
						},
						"description": "Gets all of your [collections](https://www.getpostman.com/docs/collections). The response includes all of your subscribed collections."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/probability",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"probability"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"Pending\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Converted\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 3,\n            \"name\": \"Cancel\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "DETAIL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_base_url}}/probability/1",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"probability",
								"1"
							]
						},
						"description": "Gets information about a collection. For a complete list of this endpoint's possible values, use the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json)."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/probability/1",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"probability",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"Pending\",\n        \"description\": null,\n        \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n        \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n    }\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/probability/100",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"probability",
										"100"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"message\": \"No query results for model [App\\\\Models\\\\Probability] 100\"\n}"
						}
					]
				},
				{
					"name": "CREATE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Probability 1\",\n    \"description\": \"Pro description\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api_base_url}}/probability",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"probability"
							]
						},
						"description": "Creates a collection using the [Postman Collection v2 schema format](https://schema.postman.com/json/collection/v2.1.0/docs/index.html). Include a `collection` object in the request body that contains the following required properties:\n\n*   `info` — An **object** that contains the following properties:\n    *   `name` — A **string** value that contains the collection's name.\n    *   `schema` — A **string** that contains a URL to the collection's schema. For example, the `https://schema.getpostman.com/collection/v1` URL.\n*   `item` — An **object** that contains the HTTP request and response information.\n    *   `request` — An **object** that contains the collection's request information. For a complete list of values, refer to the `definitions.request` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json). If you pass an empty object for this value, the system defaults to an untitled GET request.\n\n**Note:**\n\n*   For a complete list of available property values for this endpoint, use the following references available in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json):\n    *   `info` object — Use the `definitions.info` entry.\n    *   `item` object — Use the `definitions.items` entry.\n*   For all other possible values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json)."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Probability 1\",\n    \"description\": \"Pro description\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_base_url}}/probability",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"probability"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"name\": \"Probability 1\",\n        \"description\": \"Pro description\",\n        \"updated_at\": \"2024-02-03T06:04:54.000000Z\",\n        \"created_at\": \"2024-02-03T06:04:54.000000Z\",\n        \"id\": 4\n    }\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Probability 1\",\n    \"description\": \"Pro description\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_base_url}}/probability",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"probability"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The name has already been taken.\",\n    \"errors\": {\n        \"name\": [\n            \"The name has already been taken.\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "UPDATE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Probability 1\",\n    \"description\": \"Pro description\"\n}"
						},
						"url": {
							"raw": "{{api_base_url}}/probability/1",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"probability",
								"1"
							]
						},
						"description": "Updates a collection using the [Postman Collection v2 schema format](https://schema.postman.com/json/collection/v2.1.0/docs/index.html). Include a `collection` object in the request body that contains the following required properties:\n\n- `info` — An **object** that contains the following properties:\n    - `name` — A **string** value that contains the collection's name.\n    - `schema` — A **string** that contains a URL to the collection's schema. For example, the `https://schema.getpostman.com/collection/v1` URL.\n- `item` — An **object** that contains the HTTP request and response information.\n    - `request` — An **object** that contains the collection's request information. For a complete list of values, refer to the `definitions.request` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json). If you pass an empty object for this value, the system defaults to an untitled GET request.\n\n**Note:**\n\n- For a complete list of available property values for this endpoint, use the following references available in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json):\n    - `info` object — Use the `definitions.info` entry.\n    - `item` object — Use the `definitions.items` entry.\n- For all other possible values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json).\n    \n\n### Important\n\nUse caution when using this endpoint. The system will replace the existing collection with the values passed in the request body."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Probability 1\",\n    \"description\": \"Pro description\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_base_url}}/probability/1",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"probability",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"Probability 2\",\n        \"description\": \"Pro description\",\n        \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n        \"updated_at\": \"2024-02-03T06:09:19.000000Z\"\n    }\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Probability 1\",\n    \"description\": \"Pro description\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_base_url}}/probability/1",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"probability",
										"1"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The name has already been taken.\",\n    \"errors\": {\n        \"name\": [\n            \"The name has already been taken.\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "DELETE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_base_url}}/probability/4",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"probability",
								"4"
							]
						},
						"description": "Deletes a collection."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/probability/11",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"probability",
										"11"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": 4,\n        \"name\": \"Probability 1\",\n        \"description\": \"Pro description\",\n        \"created_at\": \"2024-02-03T06:04:54.000000Z\",\n        \"updated_at\": \"2024-02-03T06:04:54.000000Z\"\n    }\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/probability/100",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"probability",
										"100"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"No query results for model [App\\\\Models\\\\Status] 100\"\n}"
						}
					]
				}
			],
			"description": "The API CRUD for handling Type, here the list of API\n\n- Get All Status\n    \n- Get One Status\n    \n- Create a Status\n    \n- Update a Status\n    \n- Delete a Status"
		},
		{
			"name": "Channel",
			"item": [
				{
					"name": "GET",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_base_url}}/channel",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"channel"
							]
						},
						"description": "Gets all of your [collections](https://www.getpostman.com/docs/collections). The response includes all of your subscribed collections."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/channel",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"channel"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"Official Channels\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Walk-ins\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 3,\n            \"name\": \"Marketing Channels\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "DETAIL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_base_url}}/channel/1",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"channel",
								"1"
							]
						},
						"description": "Gets information about a collection. For a complete list of this endpoint's possible values, use the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json)."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/channel/1",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"channel",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"Official Channels\",\n        \"description\": null,\n        \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n        \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n    }\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/channel/100",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"channel",
										"100"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"message\": \"No query results for model [App\\\\Models\\\\Channel] 100\"\n}"
						}
					]
				},
				{
					"name": "CREATE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Channel 1\",\n    \"description\": \"Channel description\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api_base_url}}/channel",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"channel"
							]
						},
						"description": "Creates a collection using the [Postman Collection v2 schema format](https://schema.postman.com/json/collection/v2.1.0/docs/index.html). Include a `collection` object in the request body that contains the following required properties:\n\n*   `info` — An **object** that contains the following properties:\n    *   `name` — A **string** value that contains the collection's name.\n    *   `schema` — A **string** that contains a URL to the collection's schema. For example, the `https://schema.getpostman.com/collection/v1` URL.\n*   `item` — An **object** that contains the HTTP request and response information.\n    *   `request` — An **object** that contains the collection's request information. For a complete list of values, refer to the `definitions.request` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json). If you pass an empty object for this value, the system defaults to an untitled GET request.\n\n**Note:**\n\n*   For a complete list of available property values for this endpoint, use the following references available in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json):\n    *   `info` object — Use the `definitions.info` entry.\n    *   `item` object — Use the `definitions.items` entry.\n*   For all other possible values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json)."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Channel 1\",\n    \"description\": \"Channel description\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_base_url}}/channel",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"channel"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"name\": \"Channel 1\",\n        \"description\": \"Channel description\",\n        \"updated_at\": \"2024-02-03T06:19:08.000000Z\",\n        \"created_at\": \"2024-02-03T06:19:08.000000Z\",\n        \"id\": 4\n    }\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Channel 1\",\n    \"description\": \"Channel description\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_base_url}}/channel",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"channel"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The name has already been taken.\",\n    \"errors\": {\n        \"name\": [\n            \"The name has already been taken.\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "UPDATE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Channel 2\",\n    \"description\": \"Channel description\"\n}"
						},
						"url": {
							"raw": "{{api_base_url}}/channel/1",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"channel",
								"1"
							]
						},
						"description": "Updates a collection using the [Postman Collection v2 schema format](https://schema.postman.com/json/collection/v2.1.0/docs/index.html). Include a `collection` object in the request body that contains the following required properties:\n\n- `info` — An **object** that contains the following properties:\n    - `name` — A **string** value that contains the collection's name.\n    - `schema` — A **string** that contains a URL to the collection's schema. For example, the `https://schema.getpostman.com/collection/v1` URL.\n- `item` — An **object** that contains the HTTP request and response information.\n    - `request` — An **object** that contains the collection's request information. For a complete list of values, refer to the `definitions.request` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json). If you pass an empty object for this value, the system defaults to an untitled GET request.\n\n**Note:**\n\n- For a complete list of available property values for this endpoint, use the following references available in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json):\n    - `info` object — Use the `definitions.info` entry.\n    - `item` object — Use the `definitions.items` entry.\n- For all other possible values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json).\n    \n\n### Important\n\nUse caution when using this endpoint. The system will replace the existing collection with the values passed in the request body."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Channel 1\",\n    \"description\": \"Channel description\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_base_url}}/channel/1",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"channel",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"Channel 2\",\n        \"description\": \"Channel description\",\n        \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n        \"updated_at\": \"2024-02-03T06:20:25.000000Z\"\n    }\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Channel 1\",\n    \"description\": \"Channel description\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_base_url}}/channel/1",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"channel",
										"1"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The name has already been taken.\",\n    \"errors\": {\n        \"name\": [\n            \"The name has already been taken.\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "DELETE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_base_url}}/channel/4",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"channel",
								"4"
							]
						},
						"description": "Deletes a collection."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/channel/11",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"channel",
										"11"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": 4,\n        \"name\": \"Channel 1\",\n        \"description\": \"Channel description\",\n        \"created_at\": \"2024-02-03T06:19:08.000000Z\",\n        \"updated_at\": \"2024-02-03T06:19:08.000000Z\"\n    }\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/channel/100",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"channel",
										"100"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"No query results for model [App\\\\Models\\\\Channel] 100\"\n}"
						}
					]
				}
			],
			"description": "The API CRUD for handling Type, here the list of API\n\n- Get All Channel\n    \n- Get One Channel\n    \n- Create a Channel\n    \n- Update a Channel\n    \n- Delete a Channel"
		},
		{
			"name": "Media",
			"item": [
				{
					"name": "GET",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_base_url}}/media",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"media"
							]
						},
						"description": "Gets all of your [collections](https://www.getpostman.com/docs/collections). The response includes all of your subscribed collections."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/media",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"media"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"channel_id\": 1,\n            \"name\": \"WA Center\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 2,\n            \"channel_id\": 1,\n            \"name\": \"Call\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 3,\n            \"channel_id\": 1,\n            \"name\": \"Website\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 4,\n            \"channel_id\": 1,\n            \"name\": \"Email\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 5,\n            \"channel_id\": 1,\n            \"name\": \"Whatsapp Blast\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 6,\n            \"channel_id\": 1,\n            \"name\": \"Referal\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 7,\n            \"channel_id\": 1,\n            \"name\": \"OOH\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 8,\n            \"channel_id\": 2,\n            \"name\": \"Branch Badung\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 9,\n            \"channel_id\": 2,\n            \"name\": \"Branch Denpasar\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 10,\n            \"channel_id\": 2,\n            \"name\": \"Branch Malang\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 11,\n            \"channel_id\": 2,\n            \"name\": \"Branch Balikpapan\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 12,\n            \"channel_id\": 2,\n            \"name\": \"Branch Samarinda\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 13,\n            \"channel_id\": 3,\n            \"name\": \"Open Booth\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 14,\n            \"channel_id\": 3,\n            \"name\": \"Digital Platform\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "DETAIL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_base_url}}/media/1",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"media",
								"1"
							]
						},
						"description": "Gets information about a collection. For a complete list of this endpoint's possible values, use the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json)."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/media/1",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"media",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": 1,\n        \"channel_id\": 1,\n        \"name\": \"WA Center\",\n        \"description\": null,\n        \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n        \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n    }\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/media/100",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"media",
										"100"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"message\": \"No query results for model [App\\\\Models\\\\Media] 100\"\n}"
						}
					]
				},
				{
					"name": "CREATE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Media 1\",\n    \"description\": \"Media description\",\n    \"channel_id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api_base_url}}/media",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"media"
							]
						},
						"description": "Creates a collection using the [Postman Collection v2 schema format](https://schema.postman.com/json/collection/v2.1.0/docs/index.html). Include a `collection` object in the request body that contains the following required properties:\n\n*   `info` — An **object** that contains the following properties:\n    *   `name` — A **string** value that contains the collection's name.\n    *   `schema` — A **string** that contains a URL to the collection's schema. For example, the `https://schema.getpostman.com/collection/v1` URL.\n*   `item` — An **object** that contains the HTTP request and response information.\n    *   `request` — An **object** that contains the collection's request information. For a complete list of values, refer to the `definitions.request` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json). If you pass an empty object for this value, the system defaults to an untitled GET request.\n\n**Note:**\n\n*   For a complete list of available property values for this endpoint, use the following references available in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json):\n    *   `info` object — Use the `definitions.info` entry.\n    *   `item` object — Use the `definitions.items` entry.\n*   For all other possible values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json)."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Media 1\",\n    \"description\": \"Media description\",\n    \"channel_id\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_base_url}}/channel",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"channel"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"name\": \"Media 1\",\n        \"channel_id\": 1,\n        \"description\": \"Media description\",\n        \"updated_at\": \"2024-02-03T06:29:58.000000Z\",\n        \"created_at\": \"2024-02-03T06:29:58.000000Z\",\n        \"id\": 15\n    }\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Media 1\",\n    \"description\": \"Media description\",\n    \"channel_id\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_base_url}}/channel",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"channel"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The name has already been taken.\",\n    \"errors\": {\n        \"name\": [\n            \"The name has already been taken.\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "UPDATE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Media 2\",\n    \"description\": \"Media description\",\n    \"channel_id\": 1\n}"
						},
						"url": {
							"raw": "{{api_base_url}}/media/1",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"media",
								"1"
							]
						},
						"description": "Updates a collection using the [Postman Collection v2 schema format](https://schema.postman.com/json/collection/v2.1.0/docs/index.html). Include a `collection` object in the request body that contains the following required properties:\n\n- `info` — An **object** that contains the following properties:\n    - `name` — A **string** value that contains the collection's name.\n    - `schema` — A **string** that contains a URL to the collection's schema. For example, the `https://schema.getpostman.com/collection/v1` URL.\n- `item` — An **object** that contains the HTTP request and response information.\n    - `request` — An **object** that contains the collection's request information. For a complete list of values, refer to the `definitions.request` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json). If you pass an empty object for this value, the system defaults to an untitled GET request.\n\n**Note:**\n\n- For a complete list of available property values for this endpoint, use the following references available in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json):\n    - `info` object — Use the `definitions.info` entry.\n    - `item` object — Use the `definitions.items` entry.\n- For all other possible values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json).\n    \n\n### Important\n\nUse caution when using this endpoint. The system will replace the existing collection with the values passed in the request body."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Media 2\",\n    \"description\": \"Media description\",\n    \"channel_id\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_base_url}}/media/1",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"media",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": 1,\n        \"channel_id\": 1,\n        \"name\": \"Media 2\",\n        \"description\": \"Media description\",\n        \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n        \"updated_at\": \"2024-02-03T06:31:15.000000Z\"\n    }\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Media 2\",\n    \"description\": \"Media description\",\n    \"channel_id\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_base_url}}/media/1",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"media",
										"1"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The name has already been taken.\",\n    \"errors\": {\n        \"name\": [\n            \"The name has already been taken.\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "DELETE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_base_url}}/media/15",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"media",
								"15"
							]
						},
						"description": "Deletes a collection."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/media/1",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"media",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": 15,\n        \"channel_id\": 1,\n        \"name\": \"Media 1\",\n        \"description\": \"Media description\",\n        \"created_at\": \"2024-02-03T06:29:58.000000Z\",\n        \"updated_at\": \"2024-02-03T06:29:58.000000Z\"\n    }\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/media/100",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"media",
										"100"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"No query results for model [App\\\\Models\\\\Media] 100\"\n}"
						}
					]
				}
			],
			"description": "The API CRUD for handling Type, here the list of API\n\n- Get All Media\n    \n- Get One Media\n    \n- Create a Media\n    \n- Update a Media\n    \n- Delete a Media"
		},
		{
			"name": "Source",
			"item": [
				{
					"name": "GET",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_base_url}}/source",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"source"
							]
						},
						"description": "Gets all of your [collections](https://www.getpostman.com/docs/collections). The response includes all of your subscribed collections."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/source",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"source"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"media_id\": 1,\n            \"name\": \"Sales\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 2,\n            \"media_id\": 1,\n            \"name\": \"Customer Support\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 3,\n            \"media_id\": 2,\n            \"name\": \"Sales\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 4,\n            \"media_id\": 2,\n            \"name\": \"Customer Support\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 5,\n            \"media_id\": 3,\n            \"name\": \"Tawk to\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 6,\n            \"media_id\": 3,\n            \"name\": \"Lead From\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 7,\n            \"media_id\": 14,\n            \"name\": \"Google Business\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 8,\n            \"media_id\": 14,\n            \"name\": \"Facebook\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 9,\n            \"media_id\": 14,\n            \"name\": \"Instagram\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 10,\n            \"media_id\": 14,\n            \"name\": \"Google Ads\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 11,\n            \"media_id\": 14,\n            \"name\": \"Tiktok\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        },\n        {\n            \"id\": 12,\n            \"media_id\": 14,\n            \"name\": \"Meta Ads\",\n            \"description\": null,\n            \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n            \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "DETAIL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_base_url}}/source/1",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"source",
								"1"
							]
						},
						"description": "Gets information about a collection. For a complete list of this endpoint's possible values, use the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json)."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/source/1",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"source",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": 1,\n        \"media_id\": 1,\n        \"name\": \"Sales\",\n        \"description\": null,\n        \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n        \"updated_at\": \"2024-02-02T04:18:28.000000Z\"\n    }\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/source/100",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"source",
										"100"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"message\": \"No query results for model [App\\\\Models\\\\Source] 100\"\n}"
						}
					]
				},
				{
					"name": "CREATE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Source 1\",\n    \"description\": \"Source description\",\n    \"media_id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api_base_url}}/source",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"source"
							]
						},
						"description": "Creates a collection using the [Postman Collection v2 schema format](https://schema.postman.com/json/collection/v2.1.0/docs/index.html). Include a `collection` object in the request body that contains the following required properties:\n\n*   `info` — An **object** that contains the following properties:\n    *   `name` — A **string** value that contains the collection's name.\n    *   `schema` — A **string** that contains a URL to the collection's schema. For example, the `https://schema.getpostman.com/collection/v1` URL.\n*   `item` — An **object** that contains the HTTP request and response information.\n    *   `request` — An **object** that contains the collection's request information. For a complete list of values, refer to the `definitions.request` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json). If you pass an empty object for this value, the system defaults to an untitled GET request.\n\n**Note:**\n\n*   For a complete list of available property values for this endpoint, use the following references available in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json):\n    *   `info` object — Use the `definitions.info` entry.\n    *   `item` object — Use the `definitions.items` entry.\n*   For all other possible values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json)."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Source 1\",\n    \"description\": \"Source description\",\n    \"media_id\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_base_url}}/source",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"source"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"name\": \"Source 1\",\n        \"media_id\": 1,\n        \"description\": \"Source description\",\n        \"updated_at\": \"2024-02-03T06:36:11.000000Z\",\n        \"created_at\": \"2024-02-03T06:36:11.000000Z\",\n        \"id\": 13\n    }\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Source 1\",\n    \"description\": \"Source description\",\n    \"media_id\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_base_url}}/source",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"source"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The media id field is required.\",\n    \"errors\": {\n        \"media_id\": [\n            \"The media id field is required.\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "UPDATE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|aZZ7H22oi1q7A00lSX9k20wytxoYjd3pej3szzhr6171c842",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Source 2\",\n    \"description\": \"Source description\",\n    \"media_id\": 1\n}"
						},
						"url": {
							"raw": "{{api_base_url}}/source/1",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"source",
								"1"
							]
						},
						"description": "Updates a collection using the [Postman Collection v2 schema format](https://schema.postman.com/json/collection/v2.1.0/docs/index.html). Include a `collection` object in the request body that contains the following required properties:\n\n- `info` — An **object** that contains the following properties:\n    - `name` — A **string** value that contains the collection's name.\n    - `schema` — A **string** that contains a URL to the collection's schema. For example, the `https://schema.getpostman.com/collection/v1` URL.\n- `item` — An **object** that contains the HTTP request and response information.\n    - `request` — An **object** that contains the collection's request information. For a complete list of values, refer to the `definitions.request` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json). If you pass an empty object for this value, the system defaults to an untitled GET request.\n\n**Note:**\n\n- For a complete list of available property values for this endpoint, use the following references available in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json):\n    - `info` object — Use the `definitions.info` entry.\n    - `item` object — Use the `definitions.items` entry.\n- For all other possible values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json).\n    \n\n### Important\n\nUse caution when using this endpoint. The system will replace the existing collection with the values passed in the request body."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Source 2\",\n    \"description\": \"Source description\",\n    \"media_id\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_base_url}}/source/1",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"source",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": 1,\n        \"media_id\": 1,\n        \"name\": \"Source 2\",\n        \"description\": \"Source description\",\n        \"created_at\": \"2024-02-02T04:18:28.000000Z\",\n        \"updated_at\": \"2024-02-03T06:40:37.000000Z\"\n    }\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Source 2\",\n    \"description\": \"Source description\",\n    \"media_id\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_base_url}}/source/1",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"source",
										"1"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The selected media id is invalid.\",\n    \"errors\": {\n        \"media_id\": [\n            \"The selected media id is invalid.\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "DELETE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "1|K6CJyTyKtz0Jq5hzswR8EbgB9HqK2tDlfLsu8xcs09a0d955",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_base_url}}/source/10",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"source",
								"10"
							]
						},
						"description": "Deletes a collection."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/source/1",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"source",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": 15,\n        \"channel_id\": 1,\n        \"name\": \"Media 1\",\n        \"description\": \"Media description\",\n        \"created_at\": \"2024-02-03T06:29:58.000000Z\",\n        \"updated_at\": \"2024-02-03T06:29:58.000000Z\"\n    }\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{api_base_url}}/source/100",
									"host": [
										"{{api_base_url}}"
									],
									"path": [
										"source",
										"100"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"No query results for model [App\\\\Models\\\\Source] 100\"\n}"
						}
					]
				}
			],
			"description": "The API CRUD for handling Type, here the list of API\n\n- Get All Media\n    \n- Get One Media\n    \n- Create a Media\n    \n- Update a Media\n    \n- Delete a Media"
		},
		{
			"name": "Dashboard",
			"item": [
				{
					"name": "CHARTS",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "4|HHVzYiWM5CFgg7v0wy0C73cudrVpLYfiiYxD98hDf2cf24a9",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "date_start",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "date_end",
									"value": "",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{api_base_url}}/charts/lead",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"charts",
								"lead"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "X-API-Key",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://farming-simulator.pstmn.io"
		},
		{
			"key": "base_url",
			"value": "http://localhost:8000/api"
		}
	]
}